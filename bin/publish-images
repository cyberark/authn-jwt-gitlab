#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")"

. ./build_utils

# Publishes the 'authn-jwt-gitlab' image to docker registries
# There are 3 primary flows:
# - Publish build-specific (commit SHA) based images internally
# - Publish edge and release builds images internally and to DockerHub
# - Promote an existing image to a customer release and publish to latest
#
# If no parameters are specified, no images are pushed
function print_help() {
  echo "Usage: $0 [OPTION...] <version>"
  echo " internal: publish SHA tagged images internally"
  echo " edge: publish images as edge versions to registry.tld and dockerhub"
  echo " promote: publish images as a promotion (latest and less specific versions) to registry.tld and dockerhub"
  echo " version=VERSION: specify version number to use"
  echo " base-version=VERSION: specify base image version number to use to apply tags to"
  echo " target: target"
}

PUBLISH_EDGE=false
PUBLISH_INTERNAL=false
PROMOTE=false
DOCKERHUB=false
VERSION=$(<VERSION)
TARGETS="ubuntu alpine ubi"

LOCAL_TAG="$(version_tag)"

for arg in "$@"; do
  case $arg in
    --internal )
      PUBLISH_INTERNAL=true
      shift
      ;;
    --edge )
      PUBLISH_EDGE=true
      shift
      ;;
    --promote )
      PROMOTE=true
      shift
      ;;
    --dockerhub )
      DOCKERHUB=true
      shift
      ;;
    --version=* )
      VERSION="${arg#*=}"
      shift
      ;;
    --base-version=* )
      LOCAL_TAG="${arg#*=}"
      shift
      ;;
    * )
      echo "Unknown option: ${arg}"
      print_help
      exit 1
      ;;
    esac
done

echo " Check the Local Tag value :- ${LOCAL_TAG}"

# IMAGE_NAME="cyberark/authn-jwt-gitlab"

for target in $TARGETS; do
  LOCAL_IMAGE="authn-jwt-gitlab:${target}-$(project_version_with_commit)"

  # Normalize version number in the case of '+' included
  VERSION="$(echo -n "${VERSION}" | tr "+" "_")"

  # Don't publish to DockerHub unless the build is in the main authn-jwt-gitlab repo
  if [[ "${JOB_NAME}" != cyberark--authn-jwt-gitlab/* ]];
  then
    DOCKERHUB=false
  fi

  # Only push SHA images on internal
  if [[ "${PUBLISH_INTERNAL}" = true ]]; then
    echo "Pushing ${LOCAL_IMAGE} tagged images to registry.tld..."
    # Always push SHA versioned images internally
    tag_and_push "${LOCAL_IMAGE}" "registry.tld/authn-jwt-gitlab:${target}$(project_version_with_commit)"   # authn-jwt-gitlab:1.0.0-e917482
  fi

  if [[ "${PUBLISH_EDGE}" = true ]]; then
    echo "Pushing edge versions"
    tag_and_push "${LOCAL_IMAGE}" "registry.tld/authn-jwt-gitlab:${target}-edge"

    if [[ "${DOCKERHUB}" = true ]]; then
      tag_and_push "${LOCAL_IMAGE}" "cyberark/authn-jwt-gitlab:${target}-edge"
    fi
  fi

  if [[ "${PROMOTE}" = true ]]; then
    LOCAL_IMAGE="authn-jwt-gitlab:${target}-${VERSION}"
    readarray -t prefix_versions < <(gen_versions "${VERSION}")
    for version in latest "${prefix_versions[@]}"; do
      tag_and_push "${LOCAL_IMAGE}" "registry.tld/authn-jwt-gitlab:${target}-${version}"

      if [[ "${DOCKERHUB}" = true ]]; then
        tag_and_push "${LOCAL_IMAGE}" "cyberark/authn-jwt-gitlab:${target}-${version}"
      fi
    done
  fi
done
